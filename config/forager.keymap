#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

#define BASE 0
#define NUM  1
#define SYM  2
#define MOD  3
#define FUN  4
#define MSE  5
#define ADJ  6

/ {
    behaviors {
        td_lclick_dclick: tap_dance_left_double_click {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mkp LCLK>, <&mkp LCLK>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <MOD SYM>;
            then-layer = <ADJ>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
            &kp Q           &kp W           &kp E           &kp R           &kp T                   &kp Y           &kp U           &kp I           &kp O           &kp P
            &kp A           &kp S           &kp D           &kp F           &kp G                   &kp H           &kp J           &kp K           &kp L           &kp SEMI
            &kp Z           &kp X           &kp C           &kp V           &kp B                   &kp N           &lt MSE M       &kp COMMA       &kp DOT         &kp FSLH
                                                            &lt NUM BSPC    &lt MOD TAB             &lt SYM ENTER   &lt FUN SPACE
            >;
        };

        num {
            bindings = <
            &trans          &trans          &trans          &trans          &trans                  &kp FSLH        &kp N7          &kp N8          &kp N9          &kp STAR
            &trans          &trans          &trans          &trans          &trans                  &kp MINUS       &kp N4          &kp N5          &kp N6          &kp PLUS
            &trans          &trans          &trans          &trans          &trans                  &kp COMMA       &kp N1          &kp N2          &kp N3          &kp DOT
                                                            &trans          &trans                  &trans          &kp N0
            >;
        };

        sym {
            bindings = <
            &kp LBRC        &kp RBRC        &kp LPAR        &kp RPAR        &kp UNDER               &trans          &trans          &trans          &trans          &kp GRAVE
            &kp TILDE       &kp EXCL        &kp AT          &kp HASH        &kp DLLR                &trans          &trans          &trans          &trans          &trans
            &kp CARET       &kp AMPS        &kp STAR        &kp APOS        &kp DQT                 &trans          &trans          &trans          &trans          &trans
                                                            &kp LBKT        &kp RBKT                &trans          &trans
            >;
        };

        mod {
            bindings = <
            &trans          &trans          &trans          &trans          &trans                  &trans          &trans          &trans          &trans          &trans
            &sk LGUI        &sk LALT        &sk LSHFT       &sk LCTRL       &trans                  &trans          &trans          &trans          &trans          &trans
            &trans          &trans          &trans          &trans          &trans                  &trans          &trans          &trans          &trans          &trans
                                                            &trans          &trans                  &trans          &trans
            >;
        };

        fun {
            bindings = <
            &trans          &kp F7          &kp F8          &kp F9          &kp F12                 &trans          &trans          &trans          &trans          &trans
            &trans          &kp F4          &kp F5          &kp F6          &kp F11                 &trans          &trans          &trans          &trans          &trans
            &trans          &kp F1          &kp F2          &kp F3          &kp F10                 &trans          &trans          &trans          &trans          &trans
                                                            &trans          &trans                  &trans          &trans
            >;
        };

        mse {
            bindings = <
            &kp K_REDO      &kp K_PASTE     &kp K_COPY      &kp K_CUT       &kp K_UNDO              &trans          &trans          &trans          &trans          &trans
            &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP    &mmv MOVE_RIGHT &trans                  &trans          &trans          &trans          &trans          &trans
            &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP    &msc SCRL_RIGHT &trans                  &trans          &trans          &trans          &trans          &trans
                                                            &trans          &trans                  &mkp RCLK       &td_lclick_dclick
            >;
        };

        adj {
            bindings = <
            &studio_unlock  &trans          &trans          &trans          &trans                  &trans          &trans          &trans          &trans          &bt BT_CLR_ALL
            &trans          &trans          &trans          &trans          &trans                  &trans          &bt BT_SEL 3    &bt BT_SEL 4    &trans          &trans
            &trans          &trans          &trans          &trans          &trans                  &trans          &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &trans
                                                            &trans          &trans                  &trans          &trans
            >;
        };
    };
};
