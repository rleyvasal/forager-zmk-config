#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

#define BASE 0
#define NUM  1
#define SYM  2
#define FUN  3
#define MSE  4
#define BT   5
#define ADJ  6

/ {
    behaviors {
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 30 31 32 33>;
        };
        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33>;
        };
        tab_esc: tab_escape {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        td_shift_caps: tap_dance_shift_caps {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&hm_l LSHFT D>, <&kp CAPS>;
        };
        td_shift_caps_r: tap_dance_shift_caps_right {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&hm_r RSHFT K>, <&kp CAPS>;
        };
        td_lclk: tap_dance_left_click {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mkp LCLK>, <&mkp LCLK>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <NUM SYM>;
            then-layer = <ADJ>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
            &kp Q           &lt BT W        &lt MSE E       &lt FUN T       &lt NUM R               &lt SYM U       &kp I           &kp O           &kp P           &kp SEMI
            &hm_l LGUI A    &hm_l LALT S    &td_shift_caps  &hm_l LCTRL F   &kp G                   &kp H           &hm_r RCTRL J   &td_shift_caps_r &hm_r RALT L   &hm_r RGUI SEMI
            &kp Z           &kp X           &kp C           &kp V           &kp B                   &kp N           &kp M           &kp COMMA       &kp DOT         &kp FSLH
                                                            &kp BSPC        &tab_esc ESC TAB        &kp SPACE       &kp ENTER
            >;
        };

        num {
            bindings = <
            &trans          &trans          &trans          &trans          &trans                  &kp LBKT        &kp N7          &kp N8          &kp N9          &kp RBKT
            &kp LGUI        &kp LALT        &kp LSHFT       &kp LCTRL       &trans                  &kp SEMI        &kp N4          &kp N5          &kp N6          &kp EQUAL
            &trans          &trans          &trans          &trans          &trans                  &kp BSLH        &kp N1          &kp N2          &kp N3          &trans
                                                            &trans          &trans                  &kp N0          &kp DOT
            >;
        };

        sym {
            bindings = <
            &kp LBRC        &kp AMPS        &kp STAR        &kp LPAR        &kp RBRC                &trans          &trans          &trans          &trans          &trans
            &kp COLON       &kp DLLR        &kp PRCNT       &kp CARET       &kp PLUS                &trans          &kp RCTRL       &kp RSHFT       &kp RALT        &kp RGUI
            &kp TILDE       &kp EXCL        &kp AT          &kp HASH        &kp PIPE                &trans          &trans          &trans          &trans          &trans
                                                            &kp LPAR        &kp RPAR                &trans          &trans
            >;
        };

        fun {
            bindings = <
            &trans          &trans          &trans          &trans          &trans                  &trans          &kp F7          &kp F8          &kp F9          &kp F12
            &kp LGUI        &kp LALT        &kp LSHFT       &kp LCTRL       &trans                  &trans          &kp F4          &kp F5          &kp F6          &kp F11
            &trans          &trans          &trans          &trans          &trans                  &trans          &kp F1          &kp F2          &kp F3          &kp F10
                                                            &trans          &trans                  &trans          &trans
            >;
        };

        mse {
            bindings = <
            &trans          &trans          &trans          &trans          &trans                  &trans          &trans          &trans          &trans          &trans
            &kp LGUI        &kp LALT        &kp LSHFT       &kp LCTRL       &trans                  &td_lclk        &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP    &mmv MOVE_RIGHT
            &trans          &trans          &trans          &trans          &trans                  &mkp RCLK       &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP    &msc SCRL_RIGHT
                                                            &trans          &trans                  &trans          &trans
            >;
        };

        bt {
            bindings = <
            &trans          &trans          &trans          &trans          &trans                  &trans          &trans          &trans          &trans          &bt BT_CLR_ALL
            &kp LGUI        &kp LALT        &kp LSHFT       &kp LCTRL       &trans                  &trans          &bt BT_SEL 3    &bt BT_SEL 4    &trans          &trans
            &trans          &trans          &trans          &trans          &trans                  &trans          &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &trans
                                                            &trans          &trans                  &trans          &trans
            >;
        };

        adj {
            bindings = <
            &studio_unlock  &trans          &trans          &trans          &trans                  &trans          &trans          &trans          &trans          &trans
            &trans          &trans          &trans          &trans          &trans                  &trans          &trans          &trans          &trans          &trans
            &trans          &trans          &trans          &trans          &trans                  &trans          &trans          &trans          &trans          &trans
                                                            &trans          &trans                  &trans          &trans
            >;
        };
    };
};
